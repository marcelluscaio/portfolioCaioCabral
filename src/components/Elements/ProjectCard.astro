---
import { Image } from "astro:assets";
import { slide } from "astro:transitions";
import type { HeadingLevel } from "../../types/headingLevel";
import { generateChildHeading } from "../../utils/generateChildHeading";
import TechnologiesList from "./TechnologiesList.astro";
import Button from "./Button.astro";

type Props = {
	title: string;
	technologies: string[];
	description1: string;
	image: ImageMetadata;
	imageAltText: string;
	slug: string;
	headingLevel: HeadingLevel;
};

const {
	title,
	technologies,
	description1,
	image,
	imageAltText,
	slug,
	headingLevel,
} = Astro.props;

const Heading = headingLevel;
const childHeading = generateChildHeading(headingLevel);
---

<article transition:animate={slide({ duration: ".5s" })}>
	<div class="text">
		<Heading class="title--small heading">
			{title}
		</Heading>
		<TechnologiesList
			technologies={technologies}
			headingLevel={childHeading}
		/>
		<p class="regular-text--small">
			<span>Summary:</span>
			{description1}
		</p>
	</div>
	<Image
		src={image}
		alt={imageAltText}
	/>
	<div class="button">
		<Button
			href={`/projects/${slug}`}
			backgroundColor="purple"
			color="pink"
		>
			Learn more
		</Button>
	</div>
</article>

<style lang="scss">
	@use "../../styles/style.scss" as *;

	article {
		--imgRadius: calc(0.25vw + 0.25rem);
		--articlePadding: var(--spacing-1);
		--articleRadius: calc(var(--imgRadius) + var(--articlePadding));

		display: grid;
		gap: var(--articlePadding);

		padding: var(--articlePadding);
		border-radius: var(--articleRadius);

		background-color: $purple-300;

		& *::selection {
			background-color: $purple-700;
			color: $purple-300;
		}
		.text {
			.heading {
				margin-bottom: 0.5em;
			}

			p {
				span {
					margin-right: 0.5em;
					font-weight: 700;
				}

				&::first-letter {
					font-size: var(--fs-3);
				}
			}
		}

		img {
			width: 100%;
			aspect-ratio: 1 /2;
			max-height: 50vh;
			object-fit: cover;
			object-position: top 0 left 10%;
			border-radius: var(--imgRadius);
		}

		.button {
			justify-self: center;
		}
	}

	@media (min-width: 40em) {
		article {
			grid-template-columns: repeat(2, 1fr);

			border-radius: calc(var(--articleRadius) / 5) var(--articleRadius)
				var(--articleRadius) var(--articleRadius);

			.text {
				.heading {
					text-align: center;
				}
			}
			img {
				align-self: stretch;

				aspect-ratio: 16/9;
				min-height: 25vh;
				max-height: 40vh;
				/* Ideally 16/9, but not more than 40vh, or less than 25vh. If between 25vh and 40vh, and 16/9 is too short, will fill space available to fit text */

				/* margin-top: calc(var(--fs-4) * 1.5); */
				/* h3 size + margin-bottom */
			}

			.button {
				grid-column: span 2;
			}
		}

		article:nth-child(2n) {
			border-radius: var(--articleRadius) calc(var(--articleRadius) / 5)
				var(--articleRadius) var(--articleRadius);

			.text {
				order: 2;
			}

			img {
				order: 1;
			}

			.button {
				order: 3;
			}
		}
	}
</style>
