---
type ButtonTag = "a" | "button";

type Props = {
	href: string;
	backgroundColor: "pink" | "purple" | "white";
	color: "pink" | "purple" | "white";
	size?: "big";
	tag?: ButtonTag;
	newPage?: boolean;
};

const {
	href,
	backgroundColor,
	color,
	size = "",
	tag = "a",
	newPage = false,
} = Astro.props;

const TagName = tag;
---

<TagName
	class:list={[
		"button",
		"regular-text--small--bold",
		`bg-${backgroundColor}`,
		`text-${color}`,
		`${size}`,
	]}
	href={href}
	target={newPage === true ? "_blank" : "_self"}
>
	<slot />
</TagName>

<style lang="scss">
	@use "../../styles/style.scss" as *;
	.button {
		display: block;

		--padding: 0.75em;
		padding: var(--padding) calc(var(--padding) * 2);
		padding-bottom: calc(var(--padding) + 0.125em);
		margin-top: 0.75em;

		border-radius: 100vmax;

		color: $purple-700;
		line-height: 1;
		text-align: center;
	}

	button.button {
		margin-top: 0;

		padding-bottom: var(--padding);
	}

	.bg-pink {
		background-color: $purple-300;

		@include focusHover($purple-300, 2px, 4px);
	}

	.bg-purple {
		background-color: $purple-700;

		@include focusHover($purple-700, 2px, 4px);
	}

	.bg-white {
		background-color: $white;

		@include focusHover($white, 2px, 4px);
	}

	.text-pink {
		color: $purple-300;
	}

	.text-purple {
		color: $purple-700;
	}

	.text-white {
		color: $white;
	}

	.big {
		max-width: 25ch;
		margin-inline: auto;
		margin-top: 3em;
	}
</style>
