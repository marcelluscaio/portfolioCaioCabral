---
import type { HeadingLevel } from "../../types/headingLevel";
import { generateChildHeading } from "../../utils/generateChildHeading.ts";
import articlesData from "../../utils/returnArticles.ts";
import ArticleSummary from "../Elements/ArticleSummary.astro";
import Button from "../Elements/Button.astro";

type Props = {
	headingLevel: HeadingLevel;
	filter?: boolean;
};

const { headingLevel, filter = false } = Astro.props;

const Heading = headingLevel;
const childHeading = generateChildHeading(headingLevel);

const articles = filter
	? articlesData.filter((article) => article.isOnMain)
	: articlesData;

const path = Astro.url.pathname;
const isHome = path === "/";
---

<section id="articles">
	<Heading class="title--medium heading">My Articles</Heading>
	<ul>
		{
			articles.map((article) => {
				return (
					<ArticleSummary
						title={article.title}
						description={article.description}
						url={article.url}
						headingLevel={childHeading}
					/>
				);
			})
		}
	</ul>
	{
		isHome && (
			<Button
				href="/articles"
				size="big"
				color="purple"
				backgroundColor="white"
			>
				View all
			</Button>
		)
	}
</section>

<style lang="scss">
	@use "../../styles/style.scss" as *;

	section {
		margin-bottom: var(--section-paddingBlock-regular);

		color: $white;
	}

	.heading {
		margin-bottom: 0.5em;
		text-align: center;
	}
</style>
