---
import type { HeadingLevel } from "../../types/headingLevel";
import { generateChildHeading } from "../../utils/generateChildHeading.ts";
import projectsData from "../../utils/returnProjects.ts";
import ProjectCard from "../Elements/ProjectCard.astro";
import Button from "../Elements/Button.astro";

type Props = {
	headingLevel: HeadingLevel;
	filter?: boolean;
};

const { headingLevel, filter = false } = Astro.props;

const Heading = headingLevel;
const childHeading = generateChildHeading(headingLevel);

const projects = filter
	? projectsData.filter((project) => project.isOnMain)
	: projectsData;

console.log(Astro.params);
---

<section id="projects">
	<Heading class="title--medium heading">My Projects</Heading>
	<div class="cards-container">
		{
			projects.map((project) => {
				return (
					<ProjectCard
						title={project.title}
						technologies={project.technologies}
						description1={project.description1}
						image={project.image1}
						imageAltText={project.altImage1}
						slug={project.slug}
						headingLevel={childHeading}
					/>
				);
			})
		}
	</div>
	<Button
		href="/projects"
		backgroundColor="white"
		color="purple"
		size="big"
	>
		View all
	</Button>
</section>

<style lang="scss">
	@use "../../styles/style.scss" as *;

	section {
		margin-bottom: max(var(--section-paddingBlock-regular), 8vw);

		color: $purple-700;

		& > .heading {
			margin-bottom: 0.5em;

			text-align: center;
			color: $white;
		}

		& > .cards-container {
			display: grid;
			gap: calc(var(--section-paddingBlock-regular) / 2);

			margin-bottom: calc(var(--section-paddingBlock-regular) / 2);
		}
	}
</style>
