---
import { generateChildHeading } from "../../utils/generateChildHeading.ts";
import projectsData from "../../utils/returnProjects.ts";
import ProjectCard from "../Elements/ProjectCard.astro";

type Props = {
	headingLevel: HeadingLevel;
	filter?: boolean;
};
type HeadingLevel = "h1" | "h2" | "h3" | "h4" | "h5" | "h6";

const { headingLevel, filter = false } = Astro.props;

const Heading = headingLevel;
const childHeading = generateChildHeading(headingLevel);

const projects = filter
	? projectsData.filter((project) => project.isOnMain)
	: projectsData;
---

<section id="projects">
	<Heading class="title--medium heading">My Projects</Heading>
	<div>
		{
			projects.map((project) => {
				return (
					<ProjectCard
						title={project.title}
						technologies={project.technologies}
						description1={project.description1}
						image={project.image1}
						imageAltText={project.altImage1}
						slug={project.slug}
						headingLevel={childHeading}
					/>
				);
			})
		}
	</div>
	<a
		class="regular-text--small--bold"
		href="/projects"
		>View all</a
	>
</section>

<style lang="scss">
	@use "../../styles/style.scss" as *;

	section {
		margin-bottom: max(var(--section-paddingBlock-regular), 8vw);

		color: $purple-700;

		& > .heading {
			margin-bottom: 0.5em;

			text-align: center;
			color: $white;
		}

		& > div {
			display: grid;
			gap: calc(var(--section-paddingBlock-regular) / 2);

			margin-bottom: calc(var(--section-paddingBlock-regular) / 2);
		}

		& > a {
			--padding: 0.75em;

			display: block;

			max-width: 25ch;
			padding: var(--padding) 1.5em;
			padding-bottom: calc(var(--padding) + 0.25em);
			margin-top: 0.75em;
			margin-inline: auto;
			border-radius: 100vmax;

			background-color: $white;

			color: $purple-700;
			line-height: 1;
			text-align: center;
		}
	}
</style>
