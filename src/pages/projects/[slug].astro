---
import Layout from "../../layouts/Layout.astro";
import TechnologiesList from "../../components/Elements/TechnologiesList.astro";
import projectsData from "../../utils/returnProjects.ts";
import { generateChildHeading } from "../../utils/generateChildHeading.ts";
import { Image } from "astro:assets";

export async function getStaticPaths() {
	return projectsData.map((project) => ({
		params: { slug: project.slug },
		props: { project },
	}));
}

const { project } = Astro.props;
const {
	title,
	description1,
	description2,
	image1,
	altImage1,
	image2,
	altImage2,
	githubUrl,
	projectUrl,
	technologies,
} = project;

const Heading = "h1";
const childHeading = generateChildHeading(Heading);
---

<Layout title="projects">
	<div class="color">
		<Heading class="title--medium heading">
			{title}
		</Heading>
		<div class="flex">
			<Image
				src={image1}
				alt={altImage1}
			/>
			<p class="regular-text--small">{description1}</p>
		</div>
		<div class="flex">
			<Image
				src={image2}
				alt={altImage2}
			/>
			<p class="regular-text--small">{description2}</p>
		</div>
		<TechnologiesList
			technologies={technologies}
			headingLevel={childHeading}
		/>
		<div class="buttons-container">
			<a
				class="regular-text--small--bold"
				href={projectUrl}
				>Visit project</a
			>
			<a
				class="regular-text--small--bold"
				href={githubUrl}
				>See the code</a
			>
		</div>
	</div>
</Layout>

<style lang="scss">
	@use "../../styles/style.scss" as *;
	.color {
		color: $white;
	}

	.heading {
		margin-bottom: 0.5em;

		text-align: center;
	}

	.flex {
		margin-bottom: var(--fs-1);
	}

	img {
		border-radius: calc(0.25vw + 0.25rem);
	}

	.flex p {
		margin-top: 1em;
	}

	a {
		--padding: 0.75em;

		display: block;

		max-width: 25ch;
		padding: var(--padding) 1.5em;
		padding-bottom: calc(var(--padding) + 0.25em);
		margin-top: 0.75em;
		margin-inline: auto;
		border-radius: 100vmax;

		background-color: $white;

		color: $purple-700;
		line-height: 1;
		text-align: center;
	}

	@media (min-width: 40em) {
		.flex {
			display: flex;
			justify-content: space-between;
			gap: var(--fs-2);

			margin-bottom: var(--fs-5);

			&:first-of-type {
				flex-direction: row-reverse;
			}

			& p {
				margin-top: 0;

				width: 50%;
			}

			& img {
				width: 50%;
			}
		}
		.buttons-container {
			display: flex;
			justify-content: center;
			gap: var(--fs-5);
		}

		a {
			margin-inline: 0;
		}
	}
</style>
